{
  "name": "renode-extension",
  "displayName": "Renode",
  "description": "",
  "version": "0.0.1-alpha.1",
  "publisher": "antmicro",
  "icon": "img/renode.png",
  "license": "Apache-2.0",
  "homepage": "https://github.com/antmicro/renode-extension",
  "repository": {
    "type": "git",
    "url": "https://github.com/antmicro/renode-vscode-extension.git"
  },
  "engines": {
    "vscode": "^1.91.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "browser": "./dist/web.js",
  "main": "./dist/extension.js",
  "files": [
    "/dist"
  ],
  "types": "dist/index.d.ts",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sensors-button",
          "title": "Sensors",
          "icon": "img/list-view.svg"
        }
      ]
    },
    "views": {
      "sensors-button": [
        {
          "id": "sensors-info",
          "name": "Active sensors",
          "type": "webview"
        }
      ]
    },
    "configuration": {
      "title": "Renode",
      "properties": {
        "renode.customRenodePath": {
          "type": "string",
          "description": "Use Renode binary located at this path instead of extensions own. Note that only dotnet portable Renode is supported at this time"
        },
        "renode.customWSProxyPath": {
          "type": "string",
          "description": "Use Renode WS Proxy located at this path instead of extensions own"
        },
        "renode.automaticWSProxyManagement": {
          "type": "boolean",
          "default": "true",
          "description": "When enabled, the extension will manage starting Renode WS Proxy. Disable if running WS proxy manually"
        },
        "renode.defaultGDB": {
          "type": "string",
          "description": "Which GDB should be used if the project does not specify",
          "default": "gdb-multiarch"
        },
        "renode.defaultSessionUri": {
          "type": "string",
          "default": "ws://127.0.0.1:21234",
          "description": "Default base Uri for ws-proxy session"
        },
        "renode.workspace": {
          "type": "string",
          "default": "workspace",
          "description": "subdirectory this instance will connect to"
        }
      }
    },
    "commands": [
      {
        "command": "renode.sessionConnect",
        "title": "Renode: Connect to session"
      },
      {
        "command": "renode.advancedSessionConnect",
        "title": "Renode: Connect to session (Custom URI)"
      },
      {
        "command": "renode.mountFolder",
        "title": "Renode: Mount Renode Output folder"
      },
      {
        "command": "renode.unmountFolder",
        "title": "Renode: Unmount Renode Output folder"
      },
      {
        "command": "renode.sessionDisconnect",
        "title": "Renode: Disconnect from session"
      },
      {
        "command": "renode.openMonitor",
        "title": "Renode: Open Monitor"
      },
      {
        "command": "renode.openUartConsole",
        "title": "Renode: Open UART console"
      },
      {
        "command": "renode.openAllUartConsoles",
        "title": "Renode: Open all UART consoles"
      },
      {
        "command": "renode.openLogs",
        "title": "Renode: Open Logs"
      }
    ],
    "breakpoints": [
      {
        "language": "ada"
      },
      {
        "language": "c"
      }
    ],
    "debuggers": [
      {
        "type": "renodegdb",
        "label": "Renode GDB",
        "languages": [
          "ada",
          "c"
        ],
        "configurationAttributes": {
          "launch": {
            "required": [
              "elf",
              "cwd"
            ],
            "properties": {
              "elf": {
                "type": "string"
              },
              "resc": {
                "type": "string"
              },
              "repl": {
                "type": "string"
              },
              "cwd": {
                "type": "string"
              },
              "gdb": {
                "type": "string"
              },
              "cpuCluster": {
                "type": "string"
              },
              "pathMappings": {
                "type": "object"
              },
              "terminals": {
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "object"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "machine": {
                      "type": "string"
                    }
                  }
                }
              },
              "extraRenodeArgs": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "remoteSession": {
                "type": "boolean"
              }
            }
          }
        }
      }
    ]
  },
  "scripts": {
    "__build": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run __build && pnpm run emit-types",
    "compile:all": "pnpm run __build --tests && pnpm run emit-types",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run __build --production && pnpm run emit-types",
    "check-types": "tsc --noEmit",
    "emit-types": "dts-bundle-generator -o dist/index.d.ts src/webExtension.ts",
    "lint": "pnpm run fmt && eslint src --ext ts",
    "lint:fix": "pnpm run fmt:fix && eslint src --ext ts --fix",
    "fmt": "prettier --check .",
    "fmt:fix": "prettier --write .",
    "test": "pnpm run __build --tests && pnpm run test:prebuilt",
    "test:prebuilt": "node out/tests/e2e/runner.js",
    "v:pack": "vsce pack --pre-release --no-dependencies"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/tmp": "^0.2.6",
    "@types/vscode": "^1.91.0",
    "@types/ws": "^8.5.11",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "@vscode/test-web": "^0.0.60",
    "@vscode/vsce": "^2.30.0",
    "dts-bundle-generator": "^9.5.1",
    "esbuild": "^0.21.5",
    "esbuild-plugin-polyfill-node": "^0.3.0",
    "eslint": "^8.57.0",
    "glob": "^11.0.0",
    "mocha": "^10.7.3",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.3.3",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "@vscode/debugadapter": "^1.66.0",
    "@vscode/debugprotocol": "^1.66.0",
    "isomorphic-ws": "^5.0.0",
    "renode-ws-proxy": "antmicro/renode-ws-proxy"
  },
  "prettier": {
    "tabWidth": 2,
    "semi": true,
    "singleQuote": true,
    "trailingComma": "all",
    "arrowParens": "avoid"
  }
}
